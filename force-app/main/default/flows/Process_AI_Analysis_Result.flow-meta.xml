<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>find_Energy_Values</name>
        <label>find Energy Values</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <actionName>MultipleJSONParser</actionName>
        <actionType>apex</actionType>
        <connector>
            <targetReference>Verify_Data</targetReference>
        </connector>
        <flowTransactionModel>Automatic</flowTransactionModel>
        <inputParameters>
            <name>fieldName1</name>
            <value>
                <stringValue>kilowatts_consumed</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>fieldName2</name>
            <value>
                <stringValue>charge_amount_electricity</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>fieldName3</name>
            <value>
                <stringValue>due_date</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>fieldName4</name>
            <value>
                <stringValue>account</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>ignore_error</name>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>jsonStringToParse</name>
            <value>
                <elementReference>input_AIAnalysisResult</elementReference>
            </value>
        </inputParameters>
        <nameSegment>MultipleJSONParser</nameSegment>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </actionCalls>
    <apiVersion>64.0</apiVersion>
    <environments>Default</environments>
    <formulas>
        <name>EUR_Name</name>
        <dataType>String</dataType>
        <expression>{!find_Energy_Values.Value04}+&apos; &apos;+{!find_Energy_Values.Value03}</expression>
    </formulas>
    <formulas>
        <name>TextDateToDate</name>
        <dataType>Date</dataType>
        <expression>DATE(VALUE(RIGHT({!find_Energy_Values.Value03}, 4)), VALUE(LEFT({!find_Energy_Values.Value03}, 2)), VALUE(MID({!find_Energy_Values.Value03}, 4, 2)))</expression>
    </formulas>
    <formulas>
        <name>TextToKilowatts</name>
        <dataType>Number</dataType>
        <expression>VALUE({!find_Energy_Values.Value01})</expression>
        <scale>2</scale>
    </formulas>
    <interviewLabel>Process AI Analysis Result {!$Flow.CurrentDateTime}</interviewLabel>
    <isAdditionalPermissionRequiredToRun>true</isAdditionalPermissionRequiredToRun>
    <label>Process AI Analysis Result</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>Flow</processType>
    <recordCreates>
        <name>Create_EUR</name>
        <label>Create EUR</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>AllDone</targetReference>
        </connector>
        <inputAssignments>
            <field>FuelConsumption</field>
            <value>
                <elementReference>TextToKilowatts</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>FuelType</field>
            <value>
                <stringValue>Electricity</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Name</field>
            <value>
                <elementReference>EUR_Name</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>StartDate</field>
            <value>
                <elementReference>TextDateToDate</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>StnryAssetEnvrSrcId</field>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </inputAssignments>
        <object>StnryAssetEnrgyUse</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <screens>
        <name>AllDone</name>
        <label>AllDone</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <fields>
            <name>msgAlldone</name>
            <fieldText>&lt;p&gt;All Done, close this window&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <name>Verify_Data</name>
        <label>Verify Data</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <connector>
            <targetReference>Create_EUR</targetReference>
        </connector>
        <fields>
            <name>DatafromAI</name>
            <fieldText>&lt;p&gt;&lt;strong&gt;This is the payload:&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;{!input_AIAnalysisResult}&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;This is the Asset Record ID &lt;/strong&gt;{!recordId}&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;These are the JSON Values&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Val1: {!find_Energy_Values.Value01}&lt;/p&gt;&lt;p&gt;Val2: {!find_Energy_Values.Value02}&lt;/p&gt;&lt;p&gt;Val3: {!find_Energy_Values.Value03}&lt;/p&gt;&lt;p&gt;Val4: {!find_Energy_Values.Value04}&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;These are the values to create in the EUR&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;Name: {!EUR_Name}&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;Date: {!TextDateToDate}&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;Kwh: {!TextToKilowatts}&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <start>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>find_Energy_Values</targetReference>
        </connector>
    </start>
    <status>Draft</status>
    <variables>
        <name>input_AIAnalysisResult</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>recordId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
